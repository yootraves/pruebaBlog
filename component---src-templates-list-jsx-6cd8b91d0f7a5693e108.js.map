{"version":3,"sources":["webpack:///./src/components/List/index.jsx","webpack:///./src/templates/List.jsx"],"names":["List","_ref","data","location","page","getPage","allPosts","getPosts","postCount","length","posts","slice","CONTENT_PER_PAGE","react_default","a","createElement","Fragment","PostsWrapper","Helmet_default","concat","PREFIX","name","content","map","_ref2","_ref2$node$frontmatte","node","frontmatter","images","tags","path","otherProps","_objectWithoutProperties","Card","_extends","key","Pagination","propTypes","PropTypes","shape","isRequired","__webpack_require__","d","__webpack_exports__","pageQuery","ListTemplate","props","layout","components_List"],"mappings":"g0BAUA,IAAMA,EAAO,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACdC,EAAOC,YAAQF,GACfG,EAAWC,YAASL,GACpBM,EAAYF,EAASG,OACrBC,EAAQJ,EAASK,OAAOP,EAAO,GAAKQ,mBAAkBR,EAAOQ,oBAEnE,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,gBAAAI,OACMC,SADN,SAGAP,EAAAC,EAAAC,cAAA,QAAMM,KAAK,WAAWC,QAAO,GAAAH,OAAKC,SAAL,WAE9BV,EAAMa,IAAI,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,KAAQC,YAAeC,EAA1BH,EAA0BG,OAAQC,EAAlCJ,EAAkCI,KAAMC,EAAxCL,EAAwCK,KAASC,EAAjDC,EAAAP,EAAA,iCACTZ,EAAAC,EAAAC,cAACkB,EAAA,EAADC,EAAA,CAAMC,IAAKL,EAAMA,KAAMA,EAAMF,OAAQA,EAAQC,KAAMA,GAAUE,OAGjElB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAY5B,UAAWA,EAAWL,SAAUA,MAKlDH,EAAKqC,UAAY,CACfnC,KAAMoC,IAAUC,MAAM,IAAIC,WAC1BrC,SAAUmC,IAAUC,MAAM,IAAIC,YAGjBxC,QCvCfyC,EAAAC,EAAAC,EAAA,8BAAAC,IAWeC,UANM,SAAAC,GAAK,OACxBjC,EAAAC,EAAAC,cAACgC,EAAA,EAAWD,EACVjC,EAAAC,EAAAC,cAACiC,EAASF,KAFd,IAQaF,EAAS","file":"component---src-templates-list-jsx-6cd8b91d0f7a5693e108.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport PostsWrapper from '~/components/Common/PostsWrapper';\nimport Card from '~/components/Common/Card';\nimport Pagination from '~/components/Common/Pagination';\nimport getPosts from '~/utils/getPosts';\nimport getPage from '~/utils/getPage';\nimport { PREFIX, CONTENT_PER_PAGE } from '~/constants';\n\nconst List = ({ data, location }) => {\n  const page = getPage(location);\n  const allPosts = getPosts(data);\n  const postCount = allPosts.length;\n  const posts = allPosts.slice((page - 1) * CONTENT_PER_PAGE, page * CONTENT_PER_PAGE);\n\n  return (\n    <>\n      <PostsWrapper>\n        <Helmet>\n          <title>\n            {`${PREFIX}POST`}\n          </title>\n          <meta name=\"og:title\" content={`${PREFIX}POST`} />\n        </Helmet>\n        {posts.map(({ node: { frontmatter: { images, tags, path, ...otherProps } } }) => (\n          <Card key={path} path={path} images={images} tags={tags} {...otherProps} />\n        ))}\n      </PostsWrapper>\n      <Pagination postCount={postCount} location={location} />\n    </>\n  );\n};\n\nList.propTypes = {\n  data: PropTypes.shape({}).isRequired,\n  location: PropTypes.shape({}).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport List from '~/components/List';\n\nconst ListTemplate = props => (\n  <Layout {...props}>\n    <List {...props} />\n  </Layout>\n);\n\nexport default ListTemplate;\n\nexport const pageQuery = graphql`\n  query ListQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    posts: allMarkdownRemark (\n      filter: { frontmatter: { hide: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            type\n            title\n            images\n            path\n            tags\n            date\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}